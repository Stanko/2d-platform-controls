const FRAME_DURATION=1e3/60,speed=1,acceleration=1,deceleration=2,maxSpeed=5,velocity={x:0,y:0},position={x:0,y:0},trailMaxLength=50,trail=[];let trailColor;const statusElement=document.querySelector(".status"),playerElement=document.querySelector(".player"),trailElement=document.querySelector(".trail");function render(){statusElement.innerHTML=`position: ${JSON.stringify(position)}\n`,statusElement.innerHTML+=`velocity: ${JSON.stringify(velocity)}`,playerElement.style.transform=`translate(${position.x}px, ${-position.y}px)`}function renderTrail(){let t="";for(let e=0;e<trail.length;e++){const o=trail[e],{x:i,y:n}=o.position;t+=`<div \n      class="trail-point" \n      style="\n        background: ${o.color};\n        transform: translate(${i}px, ${n}px);\n      "></div>`}trailElement.innerHTML=t}const activeKeys={},keys={SPACE:" ",LEFT:"ArrowLeft",RIGHT:"ArrowRight",UP:"ArrowUp",DOWN:"ArrowDown"};function cap(t,e,o){return t<e?(trailColor="silver",e):t>o?(trailColor="silver",o):t}function updateHorizontalMovement(t){const e=activeKeys[keys.LEFT],o=activeKeys[keys.RIGHT],i=e&&!o,n=o&&!e,r=velocity.x>0,l=velocity.x<0;trailColor="silver",i?(trailColor="lime",velocity.x-=r?2*t:1*t):n?(trailColor="lime",velocity.x+=l?2*t:1*t):(trailColor="red",r?(velocity.x-=2*t,velocity.x<0&&(velocity.x=0)):l&&(velocity.x+=2*t,velocity.x>0&&(velocity.x=0))),velocity.x=cap(velocity.x,-5,5),position.x=position.x+velocity.x}function updateTrail(){const t=trail[trail.length-1];(position.x!==t?.position.x||position.y!==t?.position.y)&&(trail.push({color:trailColor,position:{...position}}),trail.length>50&&trail.shift(),renderTrail())}window.addEventListener("keydown",(t=>{activeKeys[t.key]=!0})),window.addEventListener("keyup",(t=>{delete activeKeys[t.key]}));let lastUpdate=performance.now();function gameLoop(){const t=performance.now();updateHorizontalMovement((t-lastUpdate)/FRAME_DURATION),updateTrail(),render(),lastUpdate=t,requestAnimationFrame(gameLoop)}gameLoop();
//# sourceMappingURL=part-one.1e9e954d.js.map
