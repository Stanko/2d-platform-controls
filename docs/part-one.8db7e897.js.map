{"mappings":"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","sources":["src/js/part-one.ts"],"sourcesContent":["import { Trail, Vector } from './types';\nimport easings from './easings';\n\n// ----- Constants\n\nconst FRAME_DURATION: number = 1000 / 60;\n\n// ----- Game state\n\n// Game speed\nconst speed: number = 1;\n\n// Movement\nconst accelerationGround: number = 1 * speed;\nconst decelerationGround: number = 2 * speed;\nconst maxSpeed: number = 8 * speed;\n\nconst decelerationAir: number = 0.5 * speed;\n\n// Jumping\nconst initialJumpVelocity: number = 8 * speed;\nconst jumpDeceleration: number = 0.4 * speed;\nconst jumpFall: number = 1 * speed;\nconst jumpAllowThreshold: number = 30;\n\nconst velocity: Vector = {\n  x: 0,\n  y: 0,\n};\n\nconst position: Vector = {\n  x: 0,\n  y: 0,\n};\n\nlet isOnGround: boolean = true;\nlet isJumpLegal: boolean = true;\n\nconst trailMaxLength: number = 200;\nconst trail: Trail = [];\nlet trailColor: string;\n\n// Render\nconst statusElement = document.querySelector('.status') as HTMLPreElement;\nconst playerElement = document.querySelector('.player') as HTMLDivElement;\nconst trailElement = document.querySelector('.trail') as HTMLDivElement;\nconst jumpElement = document.querySelector('.jump') as HTMLDivElement;\n\nfunction render() {\n  // status\n  statusElement.innerHTML = `position: ${JSON.stringify(position)}\\n`;\n  statusElement.innerHTML += `velocity: ${JSON.stringify(velocity)}`;\n  statusElement.innerHTML += isJumpLegal\n    ? '<div class=\"jump-status jump-status--legal\" />'\n    : '<div class=\"jump-status jump-status--illegal\" />';\n\n  // player\n  playerElement.style.transform = `translate(${\n    position.x\n  }px, ${-position.y}px)`;\n}\n\nfunction renderTrail() {\n  let trailHTML: string = '';\n\n  for (let i = 0; i < trail.length; i++) {\n    const point = trail[i];\n    const { x, y } = point.position;\n\n    trailHTML += `<div \n      class=\"trail-point\" \n      style=\"\n        background: ${point.color};\n        transform: translate(${x}px, ${-y}px);\n      \"></div>`;\n  }\n\n  trailElement.innerHTML = trailHTML;\n}\n\n// ----- Keyboard input\nconst activeKeys: Record<string, boolean> = {};\n\nconst keys = {\n  SPACE: ' ',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n};\n\nwindow.addEventListener('keydown', (e) => {\n  activeKeys[e.key] = true;\n\n  if (e.key === keys.SPACE && !e.repeat) {\n    jumpElement.style.transform = `translate(${\n      position.x\n    }px, ${-position.y}px)`;\n    jumpElement.innerHTML = position.y.toFixed(0);\n  }\n});\n\nwindow.addEventListener('keyup', (e) => {\n  delete activeKeys[e.key];\n});\n\n// ----- Update\nfunction updateHorizontalMovement(delta: number) {\n  const isLeftPressed = activeKeys[keys.LEFT];\n  const isRightPressed = activeKeys[keys.RIGHT];\n\n  const isExclusivelyLeft = isLeftPressed && !isRightPressed;\n  const isExclusivelyRight = isRightPressed && !isLeftPressed;\n\n  const isMovingRight = velocity.x > 0;\n  const isMovingLeft = velocity.x < 0;\n\n  const deceleration = isOnGround ? decelerationGround : decelerationAir;\n\n  if (isExclusivelyLeft) {\n    trailColor = 'lime';\n\n    // Left arrow is pressed\n    if (isMovingRight) {\n      // Slow down if player is already moving right\n      velocity.x -= deceleration * delta;\n    } else {\n      // If not, accelerate to the left\n      velocity.x -= accelerationGround * delta;\n    }\n  } else if (isExclusivelyRight) {\n    trailColor = 'lime';\n\n    // Right arrow is pressed\n    if (isMovingLeft) {\n      // Slow down if player is already moving left\n      velocity.x += deceleration * delta;\n    } else {\n      // If not, accelerate to the right\n      velocity.x += accelerationGround * delta;\n    }\n  } else {\n    trailColor = 'red';\n\n    // Either both or no horizontal arrows are pressed\n    // Decelerate to the stop\n\n    if (isMovingRight) {\n      // Player is moving right, decelerate\n      velocity.x -= deceleration * delta;\n\n      // When velocity starts going in the opposite direction, stop the player\n      if (velocity.x < 0) {\n        velocity.x = 0;\n      }\n    } else if (isMovingLeft) {\n      // Player is moving left, decelerate\n      velocity.x += deceleration * delta;\n\n      // When velocity starts going in the opposite direction, stop the player\n      if (velocity.x > 0) {\n        velocity.x = 0;\n      }\n    }\n  }\n\n  // Cap at maximum speed\n  if (velocity.x > maxSpeed) {\n    trailColor = 'silver';\n    velocity.x = maxSpeed;\n  } else if (velocity.x < -maxSpeed) {\n    trailColor = 'silver';\n    velocity.x = -maxSpeed;\n  }\n\n  // Update player's position using new velocity value\n  position.x += velocity.x * delta;\n}\n\nfunction updateVerticalMovement(delta: number) {\n  const isJumpPressed: boolean = activeKeys[keys.SPACE];\n  isOnGround = position.y === 0;\n\n  if (isOnGround) {\n    if (isJumpPressed && isJumpLegal) {\n      velocity.y = initialJumpVelocity;\n      trailColor = 'blue';\n      isJumpLegal = false;\n    }\n  } else {\n    if (isJumpPressed && velocity.y > 0) {\n      trailColor = 'blue';\n      velocity.y -= jumpDeceleration * delta;\n    } else {\n      velocity.y -= jumpFall * delta;\n      // velocity.y *= 1.1;\n      trailColor = 'purple';\n    }\n  }\n\n  // Update position\n  position.y += velocity.y * delta;\n\n  // Prevent player going into the ground\n  if (position.y < 0) {\n    position.y = 0;\n    velocity.y = 0;\n  }\n\n  if (!isJumpPressed && position.y < jumpAllowThreshold) {\n    // allow jumping again\n    isJumpLegal = true;\n  }\n}\n\nfunction updateTrail() {\n  const last = trail[trail.length - 1];\n\n  const hasMoved =\n    position.x !== last?.position.x || position.y !== last?.position.y;\n\n  if (hasMoved) {\n    trail.push({\n      color: trailColor,\n      position: {\n        ...position,\n      },\n    });\n\n    if (trail.length > trailMaxLength) {\n      trail.shift();\n    }\n\n    // For performance, trail is only rendered when it is changed\n    renderTrail();\n  }\n}\n\n// ----- Game loop\nlet lastUpdate: number = performance.now();\n\nfunction gameLoop() {\n  const now = performance.now();\n  const delta = (now - lastUpdate) / FRAME_DURATION;\n\n  // Update game state\n  updateHorizontalMovement(delta);\n  updateVerticalMovement(delta);\n  updateTrail();\n\n  // Render\n  render();\n\n  // Update time\n  lastUpdate = now;\n\n  // Next frame\n  requestAnimationFrame(gameLoop);\n  // setTimeout(gameLoop, 30);\n}\n\ngameLoop();\n"],"names":["$66a77d00b706514c$var$velocity","x","y","$66a77d00b706514c$var$position","$66a77d00b706514c$var$isOnGround","$66a77d00b706514c$var$isJumpLegal","$66a77d00b706514c$var$trail","$66a77d00b706514c$var$trailColor","$66a77d00b706514c$var$statusElement","document","querySelector","$66a77d00b706514c$var$playerElement","$66a77d00b706514c$var$trailElement","$66a77d00b706514c$var$jumpElement","$66a77d00b706514c$var$activeKeys","$66a77d00b706514c$var$keys","$66a77d00b706514c$var$updateTrail","last","length","position","push","color","shift","trailHTML","i","point","innerHTML","$66a77d00b706514c$var$renderTrail","window","addEventListener","e","key","repeat","style","transform","toFixed","$66a77d00b706514c$var$lastUpdate","performance","now","$66a77d00b706514c$var$gameLoop","delta","isLeftPressed","isRightPressed","isExclusivelyLeft","isExclusivelyRight","isMovingRight","isMovingLeft","deceleration","$66a77d00b706514c$var$updateHorizontalMovement","isJumpPressed","$66a77d00b706514c$var$updateVerticalMovement","JSON","stringify","requestAnimationFrame"],"version":3,"file":"part-one.8db7e897.js.map"}